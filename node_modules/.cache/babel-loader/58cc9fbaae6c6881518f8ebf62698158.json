{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saed\\\\Desktop\\\\optile\\\\Optile-weather-app-master\\\\OptileWeatherapp-master\\\\OptileWeatherapp-master\\\\src\\\\components\\\\barChartComponent.js\";\nimport React from \"react\";\nimport CanvasJSReact from '../assets/canvasjs.react';\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nfunction WeatherBarChart(props) {\n  const barChartDataArray = props.barChartConfigData.forecastData;\n\n  function setBarchartdatapoints() {\n    let dataPoints = [];\n    barChartDataArray.forecast.forEach(record => {\n      let timeLabel = moment(record.dt_txt).format(\"h A\");\n      let averageValue = \"\";\n\n      if (props.temperatureType !== \"fahrenheit\") {\n        let min_cel = Math.round((record.main.temp_min - 32) / 1.8);\n        let max_cel = Math.round((record.main.temp_max - 32) / 1.8);\n        averageValue = Math.round(min_cel + max_cel);\n      } else {\n        averageValue = Math.round(record.main.temp_min + record.main.temp_max);\n      }\n\n      averageValue = averageValue / 2;\n      dataPoints.push({\n        label: timeLabel,\n        y: Math.round(averageValue)\n      });\n    });\n    return dataPoints;\n  }\n\n  let unit = props.radioButtonVaue === 'fahrenheit' ? '째F' : '째C';\n  const options = {\n    title: {\n      text: props.barChartConfigData.titleDate,\n      horizontalAlign: \"center\",\n      fontColor: \"#00ff00\"\n    },\n    height: 500,\n    axisY: {\n      gridThickness: 0,\n      tickLength: 0,\n      lineThickness: 0,\n      valueFormatString: \" \"\n    },\n    axisX: {\n      tickLength: 0,\n      lineThickness: 0\n    },\n    toolTip: {\n      content: \"{label} : {y}\" + unit\n    },\n    width: 500,\n    animationEnabled: true,\n    data: [{\n      type: \"column\",\n      dataPoints: setBarchartdatapoints()\n    }]\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(CanvasJSChart, {\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    radioButtonVaue: state.radioButtonVaue\n  };\n};\n\nexport default connect(mapStateToProps)(WeatherBarChart);","map":{"version":3,"sources":["C:\\Users\\Saed\\Desktop\\optile\\Optile-weather-app-master\\OptileWeatherapp-master\\OptileWeatherapp-master\\src\\components\\barChartComponent.js"],"names":["React","CanvasJSReact","moment","connect","CanvasJSChart","WeatherBarChart","props","barChartDataArray","barChartConfigData","forecastData","setBarchartdatapoints","dataPoints","forecast","forEach","record","timeLabel","dt_txt","format","averageValue","temperatureType","min_cel","Math","round","main","temp_min","max_cel","temp_max","push","label","y","unit","radioButtonVaue","options","title","text","titleDate","horizontalAlign","fontColor","height","axisY","gridThickness","tickLength","lineThickness","valueFormatString","axisX","toolTip","content","width","animationEnabled","data","type","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CanvasJSReact from '../assets/canvasjs.react';\nimport moment from \"moment\";\nimport {connect} from \"react-redux\";\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nfunction WeatherBarChart(props){\n\tconst barChartDataArray=props.barChartConfigData.forecastData;\t\n\n\tfunction setBarchartdatapoints(){\n\t\tlet dataPoints=[];\n\t\tbarChartDataArray.forecast.forEach((record)=>{\n\t\t\tlet timeLabel=moment(record.dt_txt).format(\"h A\");\t\t\t\n\t\t\tlet averageValue=\"\";\n\t\t\tif(props.temperatureType !== \"fahrenheit\"){\n\t\t\t\tlet min_cel=Math.round((record.main.temp_min-32)/1.8);\n\t\t\t\tlet max_cel=Math.round((record.main.temp_max-32)/1.8);\n\t\t\t\taverageValue= Math.round(min_cel+max_cel);\t\t\t\t\n\t\t\t}else{\n\t\t\t\taverageValue= Math.round(record.main.temp_min+record.main.temp_max);\n\t\t\t}\n\t\t\taverageValue=averageValue/2;\t\t\t\n\t\t\tdataPoints.push({label:timeLabel, y:Math.round(averageValue)})\n\t\t});\t\t\n\t\treturn dataPoints;\n\t}\n\tlet unit=(props.radioButtonVaue === 'fahrenheit')?'째F':'째C';\t\n\tconst options = {\n\t\t\ttitle: {\n\t\t\t\ttext: props.barChartConfigData.titleDate,\n\t\t\t\thorizontalAlign:\"center\",\n\t\t\t\tfontColor:\"#00ff00\"\n\t\t\t},\n\t\t\theight: 500,\n\t\t\taxisY: {\n\t\t\t    gridThickness: 0,\n\t\t\t    tickLength:0,\n\t\t\t     lineThickness:0,\n\t\t\t     valueFormatString:\" \"\n\t\t\t},\n\t\t\taxisX:{\t\t       \n\t\t       tickLength: 0,\t\t       \n\t\t       lineThickness:0\t\t       \n\t\t     },\n\t\t     toolTip:{\n\t\t\t   content:\"{label} : {y}\"+unit ,\n\t\t\t },\n\t\t\t width: 500,\n\t\t\tanimationEnabled: true,\n\t\t\tdata: [\n\t\t\t{\t\t\t\t\n\t\t\t\ttype: \"column\",\n\t\t\t\tdataPoints: setBarchartdatapoints()\n\t\t\t}\n\t\t\t]\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\t\t\t\t\n\t\t\t\t<CanvasJSChart options = {options} \t\t\t\t\t\n\t\t\t\t/>\t\t\t\t\n\t\t\t</div>\n\t\t);\n}\n\nconst mapStateToProps=(state)=>{\n\treturn {radioButtonVaue:state.radioButtonVaue}\n}\n\nexport default connect(mapStateToProps)(WeatherBarChart)"]},"metadata":{},"sourceType":"module"}