{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saed\\\\Desktop\\\\optile\\\\The Webapp\\\\src\\\\components\\\\timeSliderComponent.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport Slider from '@material-ui/core/Slider';\nexport default function TimeSliderComponent(props) {\n  let forecastDataLength = props.forecastData.forecast.length;\n  const min = new Date(props.forecastData.forecast[0].dt_txt);\n  const max = new Date(props.forecastData.forecast[forecastDataLength - 1].dt_txt);\n  const minSliderValue = moment(props.forecastData.forecast[0].dt_txt).format(\"H\");\n  const maxSliderValue = moment(props.forecastData.forecast[forecastDataLength - 1].dt_txt).format(\"H\");\n  const minSlider = min.setHours(minSliderValue, 0, 0, 0);\n  const maxSlider = max.setHours(maxSliderValue, 50, 50, 50);\n  let marksList = [];\n\n  function setTimeSliderMarks() {\n    props.forecastData.forecast.forEach(record => {\n      let timeLabel = moment(record.dt_txt).format(\"ha\");\n      let time = moment(record.dt_txt).format(\"H\");\n      marksList.push({\n        value: min.setHours(time, 0, 0, 0),\n        label: timeLabel\n      });\n    });\n  }\n\n  let time = moment(props.forecastData.forecast[forecastDataLength - 1].dt_txt).format(\"H\");\n  setTimeSliderMarks();\n  marksList.push({\n    value: min.setHours(time, 50, 50, 50),\n    label: \"\"\n  });\n  return React.createElement(Slider, {\n    key: props.forecastData.forecast.dt_txt,\n    value: props.timeSliderValue,\n    \"aria-labelledby\": \"continuous-slider\",\n    marks: marksList,\n    step: null,\n    min: minSlider,\n    max: maxSlider,\n    onChangeCommitted: props.onclickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["C:\\Users\\Saed\\Desktop\\optile\\The Webapp\\src\\components\\timeSliderComponent.js"],"names":["React","moment","Slider","TimeSliderComponent","props","forecastDataLength","forecastData","forecast","length","min","Date","dt_txt","max","minSliderValue","format","maxSliderValue","minSlider","setHours","maxSlider","marksList","setTimeSliderMarks","forEach","record","timeLabel","time","push","value","label","timeSliderValue","onclickHandler"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAmC;AACjD,MAAIC,kBAAkB,GAACD,KAAK,CAACE,YAAN,CAAmBC,QAAnB,CAA4BC,MAAnD;AACA,QAAMC,GAAG,GAAG,IAAIC,IAAJ,CAASN,KAAK,CAACE,YAAN,CAAmBC,QAAnB,CAA4B,CAA5B,EAA+BI,MAAxC,CAAZ;AACA,QAAMC,GAAG,GAAG,IAAIF,IAAJ,CAASN,KAAK,CAACE,YAAN,CAAmBC,QAAnB,CAA4BF,kBAAkB,GAAC,CAA/C,EAAkDM,MAA3D,CAAZ;AAEA,QAAME,cAAc,GAACZ,MAAM,CAACG,KAAK,CAACE,YAAN,CAAmBC,QAAnB,CAA4B,CAA5B,EAA+BI,MAAhC,CAAN,CAA8CG,MAA9C,CAAqD,GAArD,CAArB;AACA,QAAMC,cAAc,GAACd,MAAM,CAACG,KAAK,CAACE,YAAN,CAAmBC,QAAnB,CAA4BF,kBAAkB,GAAC,CAA/C,EAAkDM,MAAnD,CAAN,CAAiEG,MAAjE,CAAwE,GAAxE,CAArB;AACA,QAAME,SAAS,GAACP,GAAG,CAACQ,QAAJ,CAAaJ,cAAb,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,CAAhB;AACA,QAAMK,SAAS,GAACN,GAAG,CAACK,QAAJ,CAAaF,cAAb,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,CAAhB;AACA,MAAII,SAAS,GAAC,EAAd;;AACA,WAASC,kBAAT,GAA6B;AAC5BhB,IAAAA,KAAK,CAACE,YAAN,CAAmBC,QAAnB,CAA4Bc,OAA5B,CAAqCC,MAAD,IAAU;AAC7C,UAAIC,SAAS,GAACtB,MAAM,CAACqB,MAAM,CAACX,MAAR,CAAN,CAAsBG,MAAtB,CAA6B,IAA7B,CAAd;AACA,UAAIU,IAAI,GAACvB,MAAM,CAACqB,MAAM,CAACX,MAAR,CAAN,CAAsBG,MAAtB,CAA6B,GAA7B,CAAT;AACAK,MAAAA,SAAS,CAACM,IAAV,CAAe;AAACC,QAAAA,KAAK,EAACjB,GAAG,CAACQ,QAAJ,CAAaO,IAAb,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAP;AAAoCG,QAAAA,KAAK,EAACJ;AAA1C,OAAf;AACA,KAJD;AAKA;;AACD,MAAIC,IAAI,GAACvB,MAAM,CAACG,KAAK,CAACE,YAAN,CAAmBC,QAAnB,CAA4BF,kBAAkB,GAAC,CAA/C,EAAkDM,MAAnD,CAAN,CAAiEG,MAAjE,CAAwE,GAAxE,CAAT;AACAM,EAAAA,kBAAkB;AAClBD,EAAAA,SAAS,CAACM,IAAV,CAAe;AAACC,IAAAA,KAAK,EAACjB,GAAG,CAACQ,QAAJ,CAAaO,IAAb,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,CAAP;AAAuCG,IAAAA,KAAK,EAAC;AAA7C,GAAf;AAEA,SACC,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEvB,KAAK,CAACE,YAAN,CAAmBC,QAAnB,CAA4BI,MAAzC;AACI,IAAA,KAAK,EAAEP,KAAK,CAACwB,eADjB;AAEO,uBAAgB,mBAFvB;AAGO,IAAA,KAAK,EAAET,SAHd;AAIO,IAAA,IAAI,EAAE,IAJb;AAKO,IAAA,GAAG,EAAEH,SALZ;AAMO,IAAA,GAAG,EAAEE,SANZ;AAOO,IAAA,iBAAiB,EAAEd,KAAK,CAACyB,cAPhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAaA","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport Slider from '@material-ui/core/Slider';\n\nexport default function TimeSliderComponent(props){\n\tlet forecastDataLength=props.forecastData.forecast.length;\n\tconst min = new Date(props.forecastData.forecast[0].dt_txt);\n\tconst max = new Date(props.forecastData.forecast[forecastDataLength-1].dt_txt);\n\n\tconst minSliderValue=moment(props.forecastData.forecast[0].dt_txt).format(\"H\");\n\tconst maxSliderValue=moment(props.forecastData.forecast[forecastDataLength-1].dt_txt).format(\"H\");\n\tconst minSlider=min.setHours(minSliderValue, 0, 0, 0);\t\n\tconst maxSlider=max.setHours(maxSliderValue, 50, 50, 50);\n\tlet marksList=[];\n\tfunction setTimeSliderMarks(){\n\t\tprops.forecastData.forecast.forEach((record)=>{\n\t\t\tlet timeLabel=moment(record.dt_txt).format(\"ha\");\n\t\t\tlet time=moment(record.dt_txt).format(\"H\");\n\t\t\tmarksList.push({value:min.setHours(time, 0, 0, 0), label:timeLabel})\n\t\t});\n\t}\n\tlet time=moment(props.forecastData.forecast[forecastDataLength-1].dt_txt).format(\"H\");\n\tsetTimeSliderMarks();\n\tmarksList.push({value:min.setHours(time, 50, 50, 50), label:\"\"});\n\n\treturn (\n\t\t<Slider key={props.forecastData.forecast.dt_txt}\n\t\t    value={props.timeSliderValue}\t\t\t\t        \t\t        \n\t        aria-labelledby=\"continuous-slider\"\t\t\t\t        \n\t        marks={marksList}\n\t        step={null}\n\t        min={minSlider}\n\t        max={maxSlider}\t\n\t        onChangeCommitted={props.onclickHandler}\t\t       \n\t\t/>\t\n\t);\n\n\n}"]},"metadata":{},"sourceType":"module"}